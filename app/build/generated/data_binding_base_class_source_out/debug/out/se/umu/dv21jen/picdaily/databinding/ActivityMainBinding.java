// Generated by view binder compiler. Do not edit!
package se.umu.dv21jen.picdaily.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.ListView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import se.umu.dv21jen.picdaily.R;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ExtendedFloatingActionButton addCollectionButton;

  @NonNull
  public final MaterialToolbar appBar;

  @NonNull
  public final AppBarLayout appBarLayout;

  @NonNull
  public final ListView collectionsListView;

  @NonNull
  public final LinearLayout linearLayout;

  private ActivityMainBinding(@NonNull ConstraintLayout rootView,
      @NonNull ExtendedFloatingActionButton addCollectionButton, @NonNull MaterialToolbar appBar,
      @NonNull AppBarLayout appBarLayout, @NonNull ListView collectionsListView,
      @NonNull LinearLayout linearLayout) {
    this.rootView = rootView;
    this.addCollectionButton = addCollectionButton;
    this.appBar = appBar;
    this.appBarLayout = appBarLayout;
    this.collectionsListView = collectionsListView;
    this.linearLayout = linearLayout;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.add_collection_button;
      ExtendedFloatingActionButton addCollectionButton = ViewBindings.findChildViewById(rootView, id);
      if (addCollectionButton == null) {
        break missingId;
      }

      id = R.id.app_bar;
      MaterialToolbar appBar = ViewBindings.findChildViewById(rootView, id);
      if (appBar == null) {
        break missingId;
      }

      id = R.id.app_bar_layout;
      AppBarLayout appBarLayout = ViewBindings.findChildViewById(rootView, id);
      if (appBarLayout == null) {
        break missingId;
      }

      id = R.id.collections_list_view;
      ListView collectionsListView = ViewBindings.findChildViewById(rootView, id);
      if (collectionsListView == null) {
        break missingId;
      }

      id = R.id.linearLayout;
      LinearLayout linearLayout = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout == null) {
        break missingId;
      }

      return new ActivityMainBinding((ConstraintLayout) rootView, addCollectionButton, appBar,
          appBarLayout, collectionsListView, linearLayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
