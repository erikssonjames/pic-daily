// Generated by view binder compiler. Do not edit!
package se.umu.dv21jen.picdaily.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.textfield.TextInputEditText;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import se.umu.dv21jen.picdaily.R;

public final class ActivityAddCollectionBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final AppBarLayout appBar;

  @NonNull
  public final Button createCollectionButton;

  @NonNull
  public final TextInputEditText daysEditText;

  @NonNull
  public final TextInputEditText nameEditText;

  private ActivityAddCollectionBinding(@NonNull LinearLayout rootView, @NonNull AppBarLayout appBar,
      @NonNull Button createCollectionButton, @NonNull TextInputEditText daysEditText,
      @NonNull TextInputEditText nameEditText) {
    this.rootView = rootView;
    this.appBar = appBar;
    this.createCollectionButton = createCollectionButton;
    this.daysEditText = daysEditText;
    this.nameEditText = nameEditText;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAddCollectionBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAddCollectionBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_add_collection, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAddCollectionBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.app_bar;
      AppBarLayout appBar = ViewBindings.findChildViewById(rootView, id);
      if (appBar == null) {
        break missingId;
      }

      id = R.id.create_collection_button;
      Button createCollectionButton = ViewBindings.findChildViewById(rootView, id);
      if (createCollectionButton == null) {
        break missingId;
      }

      id = R.id.days_edit_text;
      TextInputEditText daysEditText = ViewBindings.findChildViewById(rootView, id);
      if (daysEditText == null) {
        break missingId;
      }

      id = R.id.name_edit_text;
      TextInputEditText nameEditText = ViewBindings.findChildViewById(rootView, id);
      if (nameEditText == null) {
        break missingId;
      }

      return new ActivityAddCollectionBinding((LinearLayout) rootView, appBar,
          createCollectionButton, daysEditText, nameEditText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
