// Generated by view binder compiler. Do not edit!
package se.umu.dv21jen.picdaily.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import se.umu.dv21jen.picdaily.R;

public final class CollectionItemBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final CardView collectionListButton;

  @NonNull
  public final TextView collectionPurposeText;

  @NonNull
  public final CardView pictureTakenBg;

  @NonNull
  public final TextView pictureTakenText;

  private CollectionItemBinding(@NonNull RelativeLayout rootView,
      @NonNull CardView collectionListButton, @NonNull TextView collectionPurposeText,
      @NonNull CardView pictureTakenBg, @NonNull TextView pictureTakenText) {
    this.rootView = rootView;
    this.collectionListButton = collectionListButton;
    this.collectionPurposeText = collectionPurposeText;
    this.pictureTakenBg = pictureTakenBg;
    this.pictureTakenText = pictureTakenText;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static CollectionItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CollectionItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.collection_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CollectionItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.collection_list_button;
      CardView collectionListButton = ViewBindings.findChildViewById(rootView, id);
      if (collectionListButton == null) {
        break missingId;
      }

      id = R.id.collection_purpose_text;
      TextView collectionPurposeText = ViewBindings.findChildViewById(rootView, id);
      if (collectionPurposeText == null) {
        break missingId;
      }

      id = R.id.picture_taken_bg;
      CardView pictureTakenBg = ViewBindings.findChildViewById(rootView, id);
      if (pictureTakenBg == null) {
        break missingId;
      }

      id = R.id.picture_taken_text;
      TextView pictureTakenText = ViewBindings.findChildViewById(rootView, id);
      if (pictureTakenText == null) {
        break missingId;
      }

      return new CollectionItemBinding((RelativeLayout) rootView, collectionListButton,
          collectionPurposeText, pictureTakenBg, pictureTakenText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
